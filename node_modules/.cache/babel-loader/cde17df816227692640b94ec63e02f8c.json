{"ast":null,"code":"var _jsxFileName = \"/home/nastya/myProject (copy)/my-app/src/components/Imputs/use.Mask.tsx\";\nimport React from 'react';\nimport { useField } from 'formik';\nimport TextField from '@material-ui/core/TextField';\nimport MaskedInput from \"react-text-mask\";\n\n//Компонент\nconst TextMaskCustom = props => {\n  const {\n    inputRef,\n    ...other\n  } = props;\n  return /*#__PURE__*/React.createElement(MaskedInput, Object.assign({}, other, {\n    ref: ref => {\n      inputRef(ref ? ref.inputElement : null);\n    },\n    mask: [\"+\", \"7\", \" \", \"(\", /[0-9]/, /\\d/, /\\d/, \")\", \" \", /\\d/, /\\d/, \"-\", /\\d/, /\\d/, \"-\", /\\d/, /\\d/, /\\d/],\n    placeholderChar: '\\u2000',\n    showMask: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }));\n};\n\nconst MyMaskField = ({\n  id,\n  name,\n  type,\n  label\n}) => {\n  const [field, meta] = useField({\n    id,\n    name,\n    type\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fixInput\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: label,\n    value: field.value,\n    onChange: field.onChange,\n    autoComplete: \"off\",\n    id: id,\n    name: name,\n    type: type,\n    InputProps: {\n      inputComponent: TextMaskCustom\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }), meta.touched && meta.error ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"textErrror\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, meta.error) : null);\n};\n\nexport default MyMaskField;","map":{"version":3,"sources":["/home/nastya/myProject (copy)/my-app/src/components/Imputs/use.Mask.tsx"],"names":["React","useField","TextField","MaskedInput","TextMaskCustom","props","inputRef","other","ref","inputElement","MyMaskField","id","name","type","label","field","meta","value","onChange","inputComponent","touched","error"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,QAAzB;AACA,OAAOC,SAAP,MAAuB,6BAAvB;AACA,OAAOC,WAAP,MAAwB,iBAAxB;;AAmBA;AACA,MAAMC,cAAc,GAAIC,KAAD,IAA+B;AACpD,QAAM;AAAEC,IAAAA,QAAF;AAAY,OAAGC;AAAf,MAAyBF,KAA/B;AAEA,sBACE,oBAAC,WAAD,oBACME,KADN;AAEE,IAAA,GAAG,EAAGC,GAAD,IAAc;AACjBF,MAAAA,QAAQ,CAACE,GAAG,GAAGA,GAAG,CAACC,YAAP,GAAsB,IAA1B,CAAR;AACD,KAJH;AAKE,IAAA,IAAI,EAAE,CACJ,GADI,EAEJ,GAFI,EAGJ,GAHI,EAIJ,GAJI,EAKJ,OALI,EAMJ,IANI,EAOJ,IAPI,EAQJ,GARI,EASJ,GATI,EAUJ,IAVI,EAWJ,IAXI,EAYJ,GAZI,EAaJ,IAbI,EAcJ,IAdI,EAeJ,GAfI,EAgBJ,IAhBI,EAiBJ,IAjBI,EAkBJ,IAlBI,CALR;AAyBE,IAAA,eAAe,EAAE,QAzBnB;AA0BE,IAAA,QAAQ,MA1BV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AA8BD,CAjCD;;AAoCA,MAAMC,WAAgC,GAAG,CAAC;AAACC,EAAAA,EAAD;AAAKC,EAAAA,IAAL;AAAWC,EAAAA,IAAX;AAAiBC,EAAAA;AAAjB,CAAD,KAA6B;AACpE,QAAM,CAACC,KAAD,EAAQC,IAAR,IAAgBf,QAAQ,CAAC;AAACU,IAAAA,EAAD;AAAKC,IAAAA,IAAL;AAAWC,IAAAA;AAAX,GAAD,CAA9B;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AACA,IAAA,KAAK,EAAEC,KADP;AAEA,IAAA,KAAK,EAAEC,KAAK,CAACE,KAFb;AAGA,IAAA,QAAQ,EAAEF,KAAK,CAACG,QAHhB;AAIA,IAAA,YAAY,EAAC,KAJb;AAKA,IAAA,EAAE,EAAEP,EALJ;AAMA,IAAA,IAAI,EAAEC,IANN;AAOA,IAAA,IAAI,EAAEC,IAPN;AAQA,IAAA,UAAU,EAAE;AACVM,MAAAA,cAAc,EAAEf;AADN,KARZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAYGY,IAAI,CAACI,OAAL,IAAgBJ,IAAI,CAACK,KAArB,gBAEC;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6BL,IAAI,CAACK,KAAlC,CAFD,GAGG,IAfN,CADF;AAoBD,CAzBD;;AA2BA,eAAeX,WAAf","sourcesContent":["import React from 'react';\nimport { useField } from 'formik';\nimport TextField  from '@material-ui/core/TextField';\nimport MaskedInput from \"react-text-mask\";\n\n\n\ninterface Values {\n  name: string;\n  type?: string;\n  required?: boolean;\n  id: string;\n  textmask: string;\n  label: string\n\n}\n\ninterface TextMaskCustomProps {\n  inputRef: (ref: HTMLInputElement | null) => void;\n}\n\n\n//Компонент\nconst TextMaskCustom = (props: TextMaskCustomProps) =>{\n  const { inputRef, ...other } = props;\n\n  return (\n    <MaskedInput\n      {...other}\n      ref={(ref: any) => {\n        inputRef(ref ? ref.inputElement : null);\n      }}\n      mask={[\n        \"+\",\n        \"7\",\n        \" \",\n        \"(\",\n        /[0-9]/,\n        /\\d/,\n        /\\d/,\n        \")\",\n        \" \",\n        /\\d/,\n        /\\d/,\n        \"-\",\n        /\\d/,\n        /\\d/,\n        \"-\",\n        /\\d/,\n        /\\d/,\n        /\\d/\n      ]}\n      placeholderChar={'\\u2000'}\n      showMask\n    />\n  );\n}\n\n\nconst MyMaskField: ( React.FC<Values>) = ({id, name, type, label}) => {\n  const [field, meta] = useField({id, name, type});\n\n \n\n  return (\n    <div className=\"fixInput\">\n      <TextField\n      label={label}\n      value={field.value}\n      onChange={field.onChange}\n      autoComplete=\"off\"\n      id={id}\n      name={name}\n      type={type}\n      InputProps={{\n        inputComponent: TextMaskCustom as any,\n        }}/>\n      {meta.touched && meta.error ?\n      (\n        <div className=\"textErrror\">{meta.error}</div>\n      ) : null}\n    </div>\n        \n  );\n};\n \nexport default MyMaskField;"]},"metadata":{},"sourceType":"module"}