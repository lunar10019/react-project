{"ast":null,"code":"var _jsxFileName = \"/home/nastya/myProject (copy)/my-app/src/components/Modal/Modal.tsx\";\nimport React, { useState } from 'react';\nimport Modal from \"react-modal\";\nModal.setAppElement('#root');\n\nconst MyModal = () => {\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setModalIsOpen(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }, \"Open modal\"), /*#__PURE__*/React.createElement(Modal, {\n    isOpen: modalIsOpen,\n    shouldCloseOnOverlayClick: false,\n    onRequestClose: () => setModalIsOpen(false),\n    style: {\n      overlay: {\n        backgroundColor: \"grey\",\n        position: 'fixed'\n      },\n      content: {\n        position: 'absolute',\n        top: '400px',\n        left: '400px',\n        right: '400px',\n        bottom: '400px',\n        border: '1px solid #ccc',\n        background: '#fff',\n        overflow: 'auto',\n        WebkitOverflowScrolling: 'touch',\n        borderRadius: '4px',\n        outline: 'none',\n        padding: '200px'\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }, \"title\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }, \"Modal body\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setModalIsOpen(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  }, \"Close\"))));\n};\n\nexport default MyModal;","map":{"version":3,"sources":["/home/nastya/myProject (copy)/my-app/src/components/Modal/Modal.tsx"],"names":["React","useState","Modal","setAppElement","MyModal","modalIsOpen","setModalIsOpen","overlay","backgroundColor","position","content","top","left","right","bottom","border","background","overflow","WebkitOverflowScrolling","borderRadius","outline","padding"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAKAA,KAAK,CAACC,aAAN,CAAoB,OAApB;;AACA,MAAMC,OAAO,GAAG,MAAM;AAEtB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAC,KAAD,CAA9C;AAEI,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,OAAO,EAAE,MAAKK,cAAc,CAAC,IAAD,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,oBAAC,KAAD;AACA,IAAA,MAAM,EAAED,WADR;AAEA,IAAA,yBAAyB,EAAE,KAF3B;AAGA,IAAA,cAAc,EAAE,MAAMC,cAAc,CAAC,KAAD,CAHpC;AAIA,IAAA,KAAK,EAAE;AACHC,MAAAA,OAAO,EAAE;AACLC,QAAAA,eAAe,EAAE,MADZ;AAELC,QAAAA,QAAQ,EAAE;AAFL,OADN;AAKCC,MAAAA,OAAO,EAAE;AACTD,QAAAA,QAAQ,EAAE,UADD;AAETE,QAAAA,GAAG,EAAE,OAFI;AAGTC,QAAAA,IAAI,EAAE,OAHG;AAITC,QAAAA,KAAK,EAAE,OAJE;AAKTC,QAAAA,MAAM,EAAE,OALC;AAMTC,QAAAA,MAAM,EAAE,gBANC;AAOTC,QAAAA,UAAU,EAAE,MAPH;AAQTC,QAAAA,QAAQ,EAAE,MARD;AASTC,QAAAA,uBAAuB,EAAE,OAThB;AAUTC,QAAAA,YAAY,EAAE,KAVL;AAWTC,QAAAA,OAAO,EAAE,MAXA;AAYTC,QAAAA,OAAO,EAAE;AAZA;AALV,KAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAuBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAvBJ,eAwBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAxBJ,eAyBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,OAAO,EAAE,MAAMf,cAAc,CAAC,KAAD,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,CAzBJ,CAFJ,CADJ;AAkCH,CAtCD;;AA6CA,eAAeF,OAAf","sourcesContent":["import React, { useState } from 'react'\nimport Modal from \"react-modal\"\n\n\n\n\nModal.setAppElement('#root')\nconst MyModal = () => {\n\nconst [modalIsOpen, setModalIsOpen] = useState(false)\n\n    return (\n        <div >\n            <button onClick={()=> setModalIsOpen(true)}>Open modal</button>\n            <Modal \n            isOpen={modalIsOpen} \n            shouldCloseOnOverlayClick={false} \n            onRequestClose={() => setModalIsOpen(false)}\n            style={{\n                overlay: {\n                    backgroundColor: \"grey\",\n                    position: 'fixed',\n                    },\n                    content: {\n                    position: 'absolute',\n                    top: '400px',\n                    left: '400px',\n                    right: '400px',\n                    bottom: '400px',\n                    border: '1px solid #ccc',\n                    background: '#fff',\n                    overflow: 'auto',\n                    WebkitOverflowScrolling: 'touch',\n                    borderRadius: '4px',\n                    outline: 'none',\n                    padding: '200px'\n                    }}}>\n                <h2>title</h2>\n                <p>Modal body</p>\n                <div>\n                    <button onClick={() => setModalIsOpen(false) }>Close</button>\n                </div>\n            </Modal> \n        </div>\n    )\n}\n\n\n \n\n \n\nexport default MyModal"]},"metadata":{},"sourceType":"module"}