{"ast":null,"code":"var _jsxFileName = \"/home/nastya/myProject (copy)/my-app/src/components/hooks/useSpinner.tsx\";\nimport React, { useState } from 'react';\nimport { CircularProgress } from 'material-ui'; // const useSpinner = () => {\n//   const [loading, setLoading] = useState(false);\n//   return [loading ? <CircularProgress /> : null, () => setLoading(true), () => setLoading(false)];\n// };\n// export default useSpinner;\n\nconst sleep = time => new Promise(acc => setTimeout(acc, time));\n\nconst UseSpinner = () => {\n  const [isLoading, setLoading] = useState(false);\n\n  const spinner = async () => {\n    setLoading(true);\n    await sleep(3000);\n    fetch('https://jsonplaceholder.typicode.com/todos/1').then(response => response.json()).then(json => {\n      console.log(json);\n      setLoading(false);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, !isLoading && /*#__PURE__*/React.createElement(\"button\", {\n    onClick: spinner,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 22\n    }\n  }, \"Click\"), isLoading && /*#__PURE__*/React.createElement(\"button\", {\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CircularProgress, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }), \"Click\"));\n};\n\nexport default UseSpinner;","map":{"version":3,"sources":["/home/nastya/myProject (copy)/my-app/src/components/hooks/useSpinner.tsx"],"names":["React","useState","CircularProgress","sleep","time","Promise","acc","setTimeout","UseSpinner","isLoading","setLoading","spinner","fetch","then","response","json","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,gBAAT,QAAiC,aAAjC,C,CAEA;AACA;AACA;AACA;AAEA;;AAEA,MAAMC,KAAK,GAAIC,IAAD,IAAU,IAAIC,OAAJ,CAAaC,GAAD,IAASC,UAAU,CAACD,GAAD,EAAMF,IAAN,CAA/B,CAAxB;;AAEA,MAAMI,UAAoB,GAAG,MAAM;AACjC,QAAM,CAACC,SAAD,EAAYC,UAAZ,IAA0BT,QAAQ,CAAC,KAAD,CAAxC;;AAEA,QAAMU,OAAO,GAAG,YAAY;AAC1BD,IAAAA,UAAU,CAAC,IAAD,CAAV;AACA,UAAMP,KAAK,CAAC,IAAD,CAAX;AAEAS,IAAAA,KAAK,CAAC,8CAAD,CAAL,CACGC,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAESE,IAAD,IAAU;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAL,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KALH;AAMD,GAVD;;AAYA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACD,SAAD,iBAAc;AAAQ,IAAA,OAAO,EAAEE,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADjB,EAEGF,SAAS,iBACR;AAAQ,IAAA,QAAQ,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,UAHJ,CADF;AAWD,CA1BD;;AA4BA,eAAeD,UAAf","sourcesContent":["import React, { Component, useState } from 'react';\nimport { CircularProgress } from 'material-ui';\n\n// const useSpinner = () => {\n//   const [loading, setLoading] = useState(false);\n//   return [loading ? <CircularProgress /> : null, () => setLoading(true), () => setLoading(false)];\n// };\n\n// export default useSpinner;\n\nconst sleep = (time) => new Promise((acc) => setTimeout(acc, time));\n\nconst UseSpinner: React.FC = () => {\n  const [isLoading, setLoading] = useState(false);\n\n  const spinner = async () => {\n    setLoading(true);\n    await sleep(3000);\n\n    fetch('https://jsonplaceholder.typicode.com/todos/1')\n      .then((response) => response.json())\n      .then((json) => {\n        console.log(json);\n        setLoading(false);\n      });\n  };\n\n  return (\n    <div>\n      {!isLoading && <button onClick={spinner}>Click</button>}\n      {isLoading && (\n        <button disabled>\n          <CircularProgress />\n          Click\n        </button>\n      )}\n    </div>\n  );\n};\n\nexport default UseSpinner;\n"]},"metadata":{},"sourceType":"module"}