{"ast":null,"code":"var _jsxFileName = \"/home/nastya/myProject (copy)/my-app/src/components/Button/Button.tsx\";\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport Modal from \"react-modal\";\nconst Button = styled.button`\nborder: none;\nbackground-color: black;\nfont-family: \"AvenirNextCyrRegular\", sans-serif;\nfont-size: 18px;\ntransition: all 0.15s;\ncursor: pointer;\nwidth: 100px;\nheight: 50px;\nborder-radius: 2px;\ncolor: #fff;\nmargin: 12px 0;\n&:hover { \nbackground: rgba(0,0,0,0); \ncolor: #000000; \nbox-shadow: inset 0 0 0 3px #000000\n}\n`;\n\nconst Btn = () => {\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    onClick: () => setModalIsOpen(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, \"\\u041E\\u041F\\u041B\\u0410\\u0422\\u0418\\u0422\\u042C\"), /*#__PURE__*/React.createElement(Modal, {\n    isOpen: modalIsOpen,\n    shouldCloseOnOverlayClick: false,\n    onRequestClose: () => setModalIsOpen(false),\n    style: {\n      overlay: {\n        backgroundColor: \"grey\",\n        position: 'fixed'\n      },\n      content: {\n        position: 'absolute',\n        top: '400px',\n        left: '400px',\n        right: '400px',\n        bottom: '400px',\n        border: '1px solid #ccc',\n        background: '#fff',\n        overflow: 'auto',\n        WebkitOverflowScrolling: 'touch',\n        borderRadius: '4px',\n        outline: 'none',\n        padding: '200px'\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, \"title\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, \"Modal body\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setModalIsOpen(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }\n  }, \"Close\"))));\n};\n\nexport default Btn;","map":{"version":3,"sources":["/home/nastya/myProject (copy)/my-app/src/components/Button/Button.tsx"],"names":["React","useState","styled","Modal","Button","button","Btn","modalIsOpen","setModalIsOpen","overlay","backgroundColor","position","content","top","left","right","bottom","border","background","overflow","WebkitOverflowScrolling","borderRadius","outline","padding"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAGA,MAAMC,MAAM,GAAGF,MAAM,CAACG,MAAO;;;;;;;;;;;;;;;;;CAA7B;;AAuBA,MAAMC,GAAG,GAAG,MAAM;AACd,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,KAAD,CAA9C;AAEA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AACA,IAAA,OAAO,EAAE,MAAKO,cAAc,CAAC,IAAD,CAD5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wDADJ,eAII,oBAAC,KAAD;AACA,IAAA,MAAM,EAAED,WADR;AAEA,IAAA,yBAAyB,EAAE,KAF3B;AAGA,IAAA,cAAc,EAAE,MAAMC,cAAc,CAAC,KAAD,CAHpC;AAIA,IAAA,KAAK,EAAE;AACHC,MAAAA,OAAO,EAAE;AACLC,QAAAA,eAAe,EAAE,MADZ;AAELC,QAAAA,QAAQ,EAAE;AAFL,OADN;AAKCC,MAAAA,OAAO,EAAE;AACTD,QAAAA,QAAQ,EAAE,UADD;AAETE,QAAAA,GAAG,EAAE,OAFI;AAGTC,QAAAA,IAAI,EAAE,OAHG;AAITC,QAAAA,KAAK,EAAE,OAJE;AAKTC,QAAAA,MAAM,EAAE,OALC;AAMTC,QAAAA,MAAM,EAAE,gBANC;AAOTC,QAAAA,UAAU,EAAE,MAPH;AAQTC,QAAAA,QAAQ,EAAE,MARD;AASTC,QAAAA,uBAAuB,EAAE,OAThB;AAUTC,QAAAA,YAAY,EAAE,KAVL;AAWTC,QAAAA,OAAO,EAAE,MAXA;AAYTC,QAAAA,OAAO,EAAE;AAZA;AALV,KAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAuBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAvBJ,eAwBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAxBJ,eAyBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,OAAO,EAAE,MAAMf,cAAc,CAAC,KAAD,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,CAzBJ,CAJJ,CADJ;AAoCH,CAvCD;;AAyCA,eAAeF,GAAf","sourcesContent":["import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport Modal from \"react-modal\"\n\n\nconst Button = styled.button`\nborder: none;\nbackground-color: black;\nfont-family: \"AvenirNextCyrRegular\", sans-serif;\nfont-size: 18px;\ntransition: all 0.15s;\ncursor: pointer;\nwidth: 100px;\nheight: 50px;\nborder-radius: 2px;\ncolor: #fff;\nmargin: 12px 0;\n&:hover { \nbackground: rgba(0,0,0,0); \ncolor: #000000; \nbox-shadow: inset 0 0 0 3px #000000\n}\n`\n\n\n\n\n\nconst Btn = () => {\n    const [modalIsOpen, setModalIsOpen] = useState(false)\n\n    return (\n        <div>\n            <Button type='submit'\n            onClick={()=> setModalIsOpen(true)}\n            >ОПЛАТИТЬ</Button> \n            <Modal \n            isOpen={modalIsOpen} \n            shouldCloseOnOverlayClick={false} \n            onRequestClose={() => setModalIsOpen(false)}\n            style={{\n                overlay: {\n                    backgroundColor: \"grey\",\n                    position: 'fixed',\n                    },\n                    content: {\n                    position: 'absolute',\n                    top: '400px',\n                    left: '400px',\n                    right: '400px',\n                    bottom: '400px',\n                    border: '1px solid #ccc',\n                    background: '#fff',\n                    overflow: 'auto',\n                    WebkitOverflowScrolling: 'touch',\n                    borderRadius: '4px',\n                    outline: 'none',\n                    padding: '200px'\n                    }}}>\n                <h2>title</h2>\n                <p>Modal body</p>\n                <div>\n                    <button onClick={() => setModalIsOpen(false) }>Close</button>\n                </div>\n            </Modal> \n        </div>\n    )\n}\n\nexport default Btn "]},"metadata":{},"sourceType":"module"}