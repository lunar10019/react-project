{"ast":null,"code":"var _jsxFileName = \"/home/nastya/myProject (copy)/my-app/src/components/form/InputWithMask.tsx\";\nimport React from 'react';\nimport { useField } from 'formik';\nimport TextField from '@material-ui/core/TextField';\nimport MaskedInput from 'react-input-mask';\n\n//Компонент\nconst TextMaskCustom = props => {\n  const {\n    inputRef,\n    ...other\n  } = props;\n  return /*#__PURE__*/React.createElement(MaskedInput, {\n    mask: \"+7 (999) 999 99 99\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 10\n    }\n  });\n};\n\nconst MyMaskField = ({\n  id,\n  name,\n  variant,\n  type,\n  label,\n  inputComponent\n}) => {\n  const [field, meta] = useField(name); // console.log(meta.error, field.value);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: label,\n    value: field.value,\n    onChange: field.onChange,\n    autoComplete: \"off\",\n    id: id,\n    name: name,\n    type: type,\n    variant: variant,\n    inputComponent: TextMaskCustom,\n    error: !!meta.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }), meta.touched && meta.error ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"textErrror\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 37\n    }\n  }, meta.error) : null);\n};\n\nexport default MyMaskField;","map":{"version":3,"sources":["/home/nastya/myProject (copy)/my-app/src/components/form/InputWithMask.tsx"],"names":["React","useField","TextField","MaskedInput","TextMaskCustom","props","inputRef","other","MyMaskField","id","name","variant","type","label","inputComponent","field","meta","value","onChange","error","touched"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,QAAzB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,WAAP,MAAwB,kBAAxB;;AAiBA;AACA,MAAMC,cAAc,GAAIC,KAAD,IAAgC;AACrD,QAAM;AAAEC,IAAAA,QAAF;AAAY,OAAGC;AAAf,MAAyBF,KAA/B;AAEA,sBAAO,oBAAC,WAAD;AAAa,IAAA,IAAI,EAAC,oBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CAJD;;AAMA,MAAMG,WAA6B,GAAG,CAAC;AAAEC,EAAAA,EAAF;AAAMC,EAAAA,IAAN;AAAYC,EAAAA,OAAZ;AAAqBC,EAAAA,IAArB;AAA2BC,EAAAA,KAA3B;AAAkCC,EAAAA;AAAlC,CAAD,KAAwD;AAC5F,QAAM,CAACC,KAAD,EAAQC,IAAR,IAAgBf,QAAQ,CAACS,IAAD,CAA9B,CAD4F,CAE5F;;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAEG,KADT;AAEE,IAAA,KAAK,EAAEE,KAAK,CAACE,KAFf;AAGE,IAAA,QAAQ,EAAEF,KAAK,CAACG,QAHlB;AAIE,IAAA,YAAY,EAAC,KAJf;AAKE,IAAA,EAAE,EAAET,EALN;AAME,IAAA,IAAI,EAAEC,IANR;AAOE,IAAA,IAAI,EAAEE,IAPR;AAQE,IAAA,OAAO,EAAED,OARX;AASE,IAAA,cAAc,EAAEP,cATlB;AAUE,IAAA,KAAK,EAAE,CAAC,CAACY,IAAI,CAACG,KAVhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAaGH,IAAI,CAACI,OAAL,IAAgBJ,IAAI,CAACG,KAArB,gBAA6B;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6BH,IAAI,CAACG,KAAlC,CAA7B,GAA8E,IAbjF,CADF;AAiBD,CApBD;;AAsBA,eAAeX,WAAf","sourcesContent":["import React from 'react';\nimport { useField } from 'formik';\nimport TextField from '@material-ui/core/TextField';\nimport MaskedInput from 'react-input-mask';\n\ninterface Values {\n  name: string;\n  type?: string;\n  required?: boolean;\n  id: string;\n  textmask: string;\n  label: string;\n  variant: any;\n  inputComponent: any;\n}\n\ninterface TextMaskCustomProps {\n  inputRef: (ref: HTMLInputElement | null) => void;\n}\n\n//Компонент\nconst TextMaskCustom = (props: TextMaskCustomProps) => {\n  const { inputRef, ...other } = props;\n\n  return <MaskedInput mask=\"+7 (999) 999 99 99\" />;\n};\n\nconst MyMaskField: React.FC<Values> = ({ id, name, variant, type, label, inputComponent }) => {\n  const [field, meta] = useField(name);\n  // console.log(meta.error, field.value);\n  return (\n    <div className=\"form2\">\n      <TextField\n        label={label}\n        value={field.value}\n        onChange={field.onChange}\n        autoComplete=\"off\"\n        id={id}\n        name={name}\n        type={type}\n        variant={variant}\n        inputComponent={TextMaskCustom as any}\n        error={!!meta.error}\n      />\n      {meta.touched && meta.error ? <div className=\"textErrror\">{meta.error}</div> : null}\n    </div>\n  );\n};\n\nexport default MyMaskField;\n"]},"metadata":{},"sourceType":"module"}