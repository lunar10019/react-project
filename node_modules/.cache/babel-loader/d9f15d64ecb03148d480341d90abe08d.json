{"ast":null,"code":"var _jsxFileName = \"/home/nastya/myProject (copy)/my-app/src/components/hooks/useSpinner.tsx\";\nimport React, { useState } from 'react';\n\n// const useSpinner = () => {\n//   const [loading, setLoading] = useState(false);\n//   return [loading ? <CircularProgress /> : null, () => setLoading(true), () => setLoading(false)];\n// };\n// export default useSpinner;\nconst UseSpinner = () => {\n  const [isLoading, setLoading] = useState(false);\n\n  const spinner = () => {\n    setLoading(true);\n    fetch('https://jsonplaceholder.typicode.com/todos/1').then(response => response.json()).then(json => {\n      console.log(json);\n      setLoading(false);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, !isLoading && /*#__PURE__*/React.createElement(\"button\", {\n    onClick: spinner,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 22\n    }\n  }, \"Click\"), isLoading && /*#__PURE__*/React.createElement(\"button\", {\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 21\n    }\n  }, \"Click\"));\n};\n\nexport default UseSpinner;","map":{"version":3,"sources":["/home/nastya/myProject (copy)/my-app/src/components/hooks/useSpinner.tsx"],"names":["React","useState","UseSpinner","isLoading","setLoading","spinner","fetch","then","response","json","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAA2BC,QAA3B,QAA2C,OAA3C;;AAGA;AACA;AACA;AACA;AAEA;AAEA,MAAMC,UAAoB,GAAG,MAAM;AACjC,QAAM,CAACC,SAAD,EAAYC,UAAZ,IAA0BH,QAAQ,CAAC,KAAD,CAAxC;;AAEA,QAAMI,OAAO,GAAG,MAAM;AACpBD,IAAAA,UAAU,CAAC,IAAD,CAAV;AAEAE,IAAAA,KAAK,CAAC,8CAAD,CAAL,CACGC,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAESE,IAAD,IAAU;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAL,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KALH;AAMD,GATD;;AAWA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACD,SAAD,iBAAc;AAAQ,IAAA,OAAO,EAAEE,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADjB,EAEGF,SAAS,iBAAI;AAAQ,IAAA,QAAQ,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFhB,CADF;AAMD,CApBD;;AAsBA,eAAeD,UAAf","sourcesContent":["import React, { Component, useState } from 'react';\nimport { CircularProgress } from 'material-ui';\n\n// const useSpinner = () => {\n//   const [loading, setLoading] = useState(false);\n//   return [loading ? <CircularProgress /> : null, () => setLoading(true), () => setLoading(false)];\n// };\n\n// export default useSpinner;\n\nconst UseSpinner: React.FC = () => {\n  const [isLoading, setLoading] = useState(false);\n\n  const spinner = () => {\n    setLoading(true);\n\n    fetch('https://jsonplaceholder.typicode.com/todos/1')\n      .then((response) => response.json())\n      .then((json) => {\n        console.log(json);\n        setLoading(false);\n      });\n  };\n\n  return (\n    <div>\n      {!isLoading && <button onClick={spinner}>Click</button>}\n      {isLoading && <button disabled>Click</button>}\n    </div>\n  );\n};\n\nexport default UseSpinner;\n"]},"metadata":{},"sourceType":"module"}