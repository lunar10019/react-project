{"ast":null,"code":"var _jsxFileName = \"/home/nastya/myProject (copy)/my-app/src/components/Imputs/use.tsx\";\nimport React from 'react';\nimport { useField } from 'formik';\nimport TextField from '@material-ui/core/TextField'; // import { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\n// const useStyles = makeStyles((theme: Theme) =>\n//   createStyles({\n//     root: {\n//       '& .MuiTextField-root': {\n//         margin: theme.spacing(1),\n//         width: 200,\n//       },\n//     },\n//   }),\n// );\n\nconst MyTextField = ({\n  id,\n  name,\n  type,\n  variant,\n  label\n}) => {\n  const [field, meta] = useField({\n    id,\n    name,\n    type\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TextField // error\n  , {\n    variant: variant,\n    autoComplete: \"off\",\n    label: label,\n    id: id,\n    name: name,\n    type: type,\n    value: field.value,\n    onChange: field.onChange,\n    error: !!meta.touched && !!meta.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }), meta.touched && meta.error ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"textErrror\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 37\n    }\n  }, meta.error) : null);\n};\n\nexport default MyTextField;","map":{"version":3,"sources":["/home/nastya/myProject (copy)/my-app/src/components/Imputs/use.tsx"],"names":["React","useField","TextField","MyTextField","id","name","type","variant","label","field","meta","value","onChange","touched","error"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,QAAzB;AACA,OAAOC,SAAP,MAAsB,6BAAtB,C,CACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAYA,MAAMC,WAA6B,GAAG,CAAC;AAAEC,EAAAA,EAAF;AAAMC,EAAAA,IAAN;AAAYC,EAAAA,IAAZ;AAAkBC,EAAAA,OAAlB;AAA2BC,EAAAA;AAA3B,CAAD,KAAwC;AAC5E,QAAM,CAACC,KAAD,EAAQC,IAAR,IAAgBT,QAAQ,CAAC;AAAEG,IAAAA,EAAF;AAAMC,IAAAA,IAAN;AAAYC,IAAAA;AAAZ,GAAD,CAA9B;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD,CACE;AADF;AAEE,IAAA,OAAO,EAAEC,OAFX;AAGE,IAAA,YAAY,EAAC,KAHf;AAIE,IAAA,KAAK,EAAEC,KAJT;AAKE,IAAA,EAAE,EAAEJ,EALN;AAME,IAAA,IAAI,EAAEC,IANR;AAOE,IAAA,IAAI,EAAEC,IAPR;AAQE,IAAA,KAAK,EAAEG,KAAK,CAACE,KARf;AASE,IAAA,QAAQ,EAAEF,KAAK,CAACG,QATlB;AAUE,IAAA,KAAK,EAAE,CAAC,CAACF,IAAI,CAACG,OAAP,IAAkB,CAAC,CAACH,IAAI,CAACI,KAVlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAaGJ,IAAI,CAACG,OAAL,IAAgBH,IAAI,CAACI,KAArB,gBAA6B;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6BJ,IAAI,CAACI,KAAlC,CAA7B,GAA8E,IAbjF,CADF;AAiBD,CApBD;;AAsBA,eAAeX,WAAf","sourcesContent":["import React from 'react';\nimport { useField } from 'formik';\nimport TextField from '@material-ui/core/TextField';\n// import { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\n\n// const useStyles = makeStyles((theme: Theme) =>\n//   createStyles({\n//     root: {\n//       '& .MuiTextField-root': {\n//         margin: theme.spacing(1),\n//         width: 200,\n//       },\n//     },\n//   }),\n// );\n\ninterface Values {\n  name: string;\n  type?: string;\n  required?: boolean;\n  id: string;\n  // placeholder: string,\n  label: string;\n  variant: any;\n}\n\nconst MyTextField: React.FC<Values> = ({ id, name, type, variant, label }) => {\n  const [field, meta] = useField({ id, name, type });\n\n  return (\n    <div className=\"form\">\n      <TextField\n        // error\n        variant={variant}\n        autoComplete=\"off\"\n        label={label}\n        id={id}\n        name={name}\n        type={type}\n        value={field.value}\n        onChange={field.onChange}\n        error={!!meta.touched && !!meta.error}\n      />\n      {meta.touched && meta.error ? <div className=\"textErrror\">{meta.error}</div> : null}\n    </div>\n  );\n};\n\nexport default MyTextField;\n"]},"metadata":{},"sourceType":"module"}