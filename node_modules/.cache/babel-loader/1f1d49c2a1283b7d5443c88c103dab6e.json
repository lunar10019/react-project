{"ast":null,"code":"var _jsxFileName = \"/home/nastya/myProject (copy)/my-app/src/components/form/Forma.tsx\";\nimport React, { useState } from 'react';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport MyTextField from './Input';\nimport MyMaskField from './InputWithMask';\nimport { motion } from 'framer-motion';\nimport Button from '@material-ui/core/Button';\nimport { CircularProgress } from 'material-ui';\nimport styled from 'styled-components'; ///STYLE\n\nconst Container = styled.section`\n  display: inline-block;\n  align-self: center;\n  align-items: center;\n  padding: 20px 60px 50px 60px;\n  background: white;\n  box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);\n  input[type='number'] {\n    -moz-appearance: textfield;\n  }\n\n  input::-webkit-outer-spin-button,\n  input::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n`;\nconst Title = styled.h1`\n  margin-bottom: 60px;\n  font-size: 30px;\n  font-family: 'Officina Serif' !important;\n  font-weight: 700 !important;\n  color: #120338;\n`;\n\nconst sleep = time => new Promise(acc => setTimeout(acc, time));\n\nconst initialValues = {\n  phoneNumber: '',\n  price: ''\n};\nconst PaymentSchema = Yup.object().shape({\n  phoneNumber: Yup.string().required('Введите номер'),\n  price: Yup.number().min(1, '').max(1000, 'Сумма не должна превышать 1000₽').required('Введите сумму платежа')\n}); //Компонент\n\nconst Forma = props => {\n  const successMsg = ['Оплата мобильной связи прошла успешно!', 'Произошла ошибка! Повторите операцию'];\n  const [isLoading, setLoading] = useState(false);\n\n  const handleSubmit = async (values, formikHelpers) => {\n    setLoading(true);\n    await sleep(3000);\n    setLoading(false);\n    await sleep(1);\n    alert(successMsg[Math.round(Math.random() * successMsg.length)]);\n  };\n\n  const [values, setValues] = React.useState({\n    textmask: ''\n  });\n\n  const handleChange = event => {\n    setValues({ ...values,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(motion.div, {\n    initial: {\n      opacity: 0\n    },\n    animate: {\n      opacity: 1\n    },\n    transition: {\n      delay: 0.5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }, \"\\u041F\\u043E\\u043F\\u043E\\u043B\\u043D\\u0438\\u0442\\u044C \\u0441\\u0447\\u0451\\u0442\")), /*#__PURE__*/React.createElement(Formik, {\n    initialValues: initialValues,\n    onSubmit: handleSubmit,\n    validationSchema: PaymentSchema,\n    handleChange: handleChange,\n    isSubmitting: true // onClick={handleClick}\n    // component={MyForm}\n    ,\n    dirty: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, props => {\n    // props.isSubmitting;\n    return /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(MyMaskField, {\n      variant: \"outlined\",\n      label: \"\\u041D\\u043E\\u043C\\u0435\\u0440 \\u0442\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D\\u0430\",\n      textmask: \"\",\n      name: \"phoneNumber\",\n      id: \"phoneNumber\",\n      type: \"string\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(MyTextField, {\n      variant: \"outlined\",\n      label: \"\\u0421\\u0443\\u043C\\u043C\\u0430 \\u043F\\u043B\\u0430\\u0442\\u0435\\u0436\\u0430\",\n      name: \"price\",\n      id: \"price\",\n      type: \"number\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 21\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }\n    }, !isLoading && /*#__PURE__*/React.createElement(Button, {\n      variant: \"outlined\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 21\n      }\n    }, \"\\u041E\\u043F\\u043B\\u0430\\u0442\\u0438\\u0442\\u044C\"), isLoading && /*#__PURE__*/React.createElement(Button, {\n      variant: \"outlined\",\n      type: \"submit\",\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 21\n      }\n    }, \"\\u041E\\u043F\\u043B\\u0430\\u0442\\u0430...\", /*#__PURE__*/React.createElement(CircularProgress, {\n      color: \"#6200ea\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 23\n      }\n    }))));\n  })));\n};\n\nexport default Forma;","map":{"version":3,"sources":["/home/nastya/myProject (copy)/my-app/src/components/form/Forma.tsx"],"names":["React","useState","Formik","Form","Yup","MyTextField","MyMaskField","motion","Button","CircularProgress","styled","Container","section","Title","h1","sleep","time","Promise","acc","setTimeout","initialValues","phoneNumber","price","PaymentSchema","object","shape","string","required","number","min","max","Forma","props","successMsg","isLoading","setLoading","handleSubmit","values","formikHelpers","alert","Math","round","random","length","setValues","textmask","handleChange","event","target","name","value","opacity","delay"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA4C,QAA5C;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,OAAOC,WAAP,MAAwB,SAAxB;AACA,OAAOC,WAAP,MAAwB,iBAAxB;AACA,SAASC,MAAT,QAAuB,eAAvB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,gBAAT,QAAiC,aAAjC;AACA,OAAOC,MAAP,MAAmB,mBAAnB,C,CAEA;;AACA,MAAMC,SAAS,GAAGD,MAAM,CAACE,OAAQ;;;;;;;;;;;;;;;CAAjC;AAiBA,MAAMC,KAAK,GAAGH,MAAM,CAACI,EAAG;;;;;;CAAxB;;AAQA,MAAMC,KAAK,GAAIC,IAAD,IAAU,IAAIC,OAAJ,CAAaC,GAAD,IAASC,UAAU,CAACD,GAAD,EAAMF,IAAN,CAA/B,CAAxB;;AAOA,MAAMI,aAAyB,GAAG;AAChCC,EAAAA,WAAW,EAAE,EADmB;AAEhCC,EAAAA,KAAK,EAAE;AAFyB,CAAlC;AASA,MAAMC,aAAa,GAAGnB,GAAG,CAACoB,MAAJ,GAAaC,KAAb,CAAmB;AACvCJ,EAAAA,WAAW,EAAEjB,GAAG,CAACsB,MAAJ,GAAaC,QAAb,CAAsB,eAAtB,CAD0B;AAEvCL,EAAAA,KAAK,EAAElB,GAAG,CAACwB,MAAJ,GACJC,GADI,CACA,CADA,EACG,EADH,EAEJC,GAFI,CAEA,IAFA,EAEM,iCAFN,EAGJH,QAHI,CAGK,uBAHL;AAFgC,CAAnB,CAAtB,C,CAQA;;AACA,MAAMI,KAAe,GAAIC,KAAD,IAAW;AACjC,QAAMC,UAAU,GAAG,CACjB,wCADiB,EAEjB,sCAFiB,CAAnB;AAKA,QAAM,CAACC,SAAD,EAAYC,UAAZ,IAA0BlC,QAAQ,CAAC,KAAD,CAAxC;;AAEA,QAAMmC,YAAY,GAAG,OAAOC,MAAP,EAA2BC,aAA3B,KAAwE;AAC3FH,IAAAA,UAAU,CAAC,IAAD,CAAV;AACA,UAAMpB,KAAK,CAAC,IAAD,CAAX;AACAoB,IAAAA,UAAU,CAAC,KAAD,CAAV;AACA,UAAMpB,KAAK,CAAC,CAAD,CAAX;AACAwB,IAAAA,KAAK,CAACN,UAAU,CAACO,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBT,UAAU,CAACU,MAAtC,CAAD,CAAX,CAAL;AACD,GAND;;AAQA,QAAM,CAACN,MAAD,EAASO,SAAT,IAAsB5C,KAAK,CAACC,QAAN,CAAsB;AAChD4C,IAAAA,QAAQ,EAAE;AADsC,GAAtB,CAA5B;;AAIA,QAAMC,YAAY,GAAIC,KAAD,IAAgD;AACnEH,IAAAA,SAAS,CAAC,EACR,GAAGP,MADK;AAER,OAACU,KAAK,CAACC,MAAN,CAAaC,IAAd,GAAqBF,KAAK,CAACC,MAAN,CAAaE;AAF1B,KAAD,CAAT;AAID,GALD;;AAOA,sBACE,oBAAC,MAAD,CAAQ,GAAR;AAAY,IAAA,OAAO,EAAE;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAArB;AAAqC,IAAA,OAAO,EAAE;AAAEA,MAAAA,OAAO,EAAE;AAAX,KAA9C;AAA8D,IAAA,UAAU,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uFADF,CADF,eAIE,oBAAC,MAAD;AACE,IAAA,aAAa,EAAEhC,aADjB;AAEE,IAAA,QAAQ,EAAEgB,YAFZ;AAGE,IAAA,gBAAgB,EAAEb,aAHpB;AAIE,IAAA,YAAY,EAAEuB,YAJhB;AAKE,IAAA,YAAY,MALd,CAME;AACA;AAPF;AAQE,IAAA,KAAK,MARP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASId,KAAD,IAAW;AACV;AACA,wBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,WAAD;AACE,MAAA,OAAO,EAAC,UADV;AAEE,MAAA,KAAK,EAAC,iFAFR;AAGE,MAAA,QAAQ,EAAC,EAHX;AAIE,MAAA,IAAI,EAAC,aAJP;AAKE,MAAA,EAAE,EAAC,aALL;AAME,MAAA,IAAI,EAAC,QANP;AAOE,MAAA,QAAQ,MAPV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,WAAD;AACE,MAAA,OAAO,EAAC,UADV;AAEE,MAAA,KAAK,EAAC,2EAFR;AAGE,MAAA,IAAI,EAAC,OAHP;AAIE,MAAA,EAAE,EAAC,OAJL;AAKE,MAAA,IAAI,EAAC,QALP;AAME,MAAA,QAAQ,MANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAVF,CADF,eAuBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,CAACE,SAAD,iBACC,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,UAAhB;AAA2B,MAAA,IAAI,EAAC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0DAFJ,EAMGA,SAAS,iBACR,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,UAAhB;AAA2B,MAAA,IAAI,EAAC,QAAhC;AAAyC,MAAA,QAAQ,MAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+DAEE,oBAAC,gBAAD;AAAkB,MAAA,KAAK,EAAC,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAPJ,CAvBF,CADF;AAuCD,GAlDH,CAJF,CADF,CADF;AA6DD,CAxFD;;AA0FA,eAAeH,KAAf","sourcesContent":["import React, { useState } from 'react';\nimport { Formik, Form, FormikHelpers } from 'formik';\nimport * as Yup from 'yup';\nimport MyTextField from './Input';\nimport MyMaskField from './InputWithMask';\nimport { motion } from 'framer-motion';\nimport Button from '@material-ui/core/Button';\nimport { CircularProgress } from 'material-ui';\nimport styled from 'styled-components';\n\n///STYLE\nconst Container = styled.section`\n  display: inline-block;\n  align-self: center;\n  align-items: center;\n  padding: 20px 60px 50px 60px;\n  background: white;\n  box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);\n  input[type='number'] {\n    -moz-appearance: textfield;\n  }\n\n  input::-webkit-outer-spin-button,\n  input::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n`;\n\nconst Title = styled.h1`\n  margin-bottom: 60px;\n  font-size: 30px;\n  font-family: 'Officina Serif' !important;\n  font-weight: 700 !important;\n  color: #120338;\n`;\n\nconst sleep = (time) => new Promise((acc) => setTimeout(acc, time));\n\ninterface FormValues {\n  phoneNumber: string | number;\n  price: string;\n}\n\nconst initialValues: FormValues = {\n  phoneNumber: '',\n  price: '',\n};\n\ninterface State {\n  textmask: string;\n}\n\nconst PaymentSchema = Yup.object().shape({\n  phoneNumber: Yup.string().required('Введите номер'),\n  price: Yup.number()\n    .min(1, '')\n    .max(1000, 'Сумма не должна превышать 1000₽')\n    .required('Введите сумму платежа'),\n});\n\n//Компонент\nconst Forma: React.FC = (props) => {\n  const successMsg = [\n    'Оплата мобильной связи прошла успешно!',\n    'Произошла ошибка! Повторите операцию',\n  ];\n\n  const [isLoading, setLoading] = useState(false);\n\n  const handleSubmit = async (values: FormValues, formikHelpers: FormikHelpers<FormValues>) => {\n    setLoading(true);\n    await sleep(3000);\n    setLoading(false);\n    await sleep(1);\n    alert(successMsg[Math.round(Math.random() * successMsg.length)]);\n  };\n\n  const [values, setValues] = React.useState<State>({\n    textmask: '',\n  });\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setValues({\n      ...values,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  return (\n    <motion.div initial={{ opacity: 0 }} animate={{ opacity: 1 }} transition={{ delay: 0.5 }}>\n      <Container>\n        <div>\n          <Title>Пополнить счёт</Title>\n        </div>\n        <Formik\n          initialValues={initialValues}\n          onSubmit={handleSubmit}\n          validationSchema={PaymentSchema}\n          handleChange={handleChange}\n          isSubmitting\n          // onClick={handleClick}\n          // component={MyForm}\n          dirty>\n          {(props) => {\n            // props.isSubmitting;\n            return (\n              <Form>\n                <div>\n                  <MyMaskField\n                    variant=\"outlined\"\n                    label=\"Номер телефона\"\n                    textmask=\"\"\n                    name=\"phoneNumber\"\n                    id=\"phoneNumber\"\n                    type=\"string\"\n                    required\n                  />\n                  <div>\n                    <MyTextField\n                      variant=\"outlined\"\n                      label=\"Сумма платежа\"\n                      name=\"price\"\n                      id=\"price\"\n                      type=\"number\"\n                      required\n                    />\n                  </div>\n                </div>\n\n                <div>\n                  {!isLoading && (\n                    <Button variant=\"outlined\" type=\"submit\">\n                      Оплатить\n                    </Button>\n                  )}\n                  {isLoading && (\n                    <Button variant=\"outlined\" type=\"submit\" disabled>\n                      Оплата...\n                      <CircularProgress color=\"#6200ea\" />\n                    </Button>\n                  )}\n                </div>\n              </Form>\n            );\n          }}\n        </Formik>\n      </Container>\n    </motion.div>\n  );\n};\n\nexport default Forma;\n"]},"metadata":{},"sourceType":"module"}